/* eslint-disable react/display-name */
import { createClient } from "contentful";
import { documentToReactComponents } from "@contentful/rich-text-react-renderer";
import { INLINES } from "@contentful/rich-text-types";
import Image from "next/image";
import BlogSkeleton from "../../components/BlogSkeleton";

const client = createClient({
	space: process.env.ATC_CONTENTFUL_SPACE_ID,
	accessToken: process.env.ATC_CONTENTFUL_ACCESS_TOKEN,
});

//this is done during build time to get what paths we need
export const getStaticPaths = async () => {
	const res = await client.getEntries({
		content_type: "blogPost",
	});

	const paths = res.items.map((item) => {
		return {
			params: { slug: item.fields.slug },
		};
	});

	return {
		paths,
		fallback: true,
	};
};

//execute on runtime, every time page loads
//for each path generated by getStaticPaths this function runs once
export async function getStaticProps({ params }) {
	const { items } = await client.getEntries({
		content_type: "blogPost",
		"fields.slug": params.slug,
	});

	/* conditional redirect */
	if(!items.length) {
		return{
			redirect:{
				destination:'/blog',
				permanent: false
			}
		}
	}
	return {
		props: { blog: items[0] },
		revalidate: 1000
	};
}

const BlogPost = ({ blog }) => {
	if(!blog) return <BlogSkeleton/>

	const {
		title,
		slug,
		featuredImage,
		featuredImage: {
			fields: {
				file: { url },
			},
		},
		blogContent,
	} = blog.fields;

	const renderOptions = {
		renderNode: {
			[INLINES.ASSET_HYPERLINK]: (node) => {
				// target the contentType of the EMBEDDED_ENTRY to display as you need
				return (
					<a
						href={`https://${node.data.target.fields.file.url}`}
						target="_blank"
						rel="noreferrer"
						style={{
							color: "blue",
							textDecoration: "underline",
							textDecorationColor: "blue",
						}}
					>
						{" "}
						{node.data.target.fields.title}
					</a>
				);
			},
		},
	};

	return (
		<>
			<section className="breadcrumbs">
				<div className="container">
					<ol>
						<li>
							<a href="index.html">Home</a>
						</li>
						<li>Blog</li>
						<li>{}</li>
					</ol>
					<h2 className="text-center">Clients we have worked with</h2>
				</div>
			</section>
			<section id="blog" className="blog">
				<div className="container" data-aos="fade-up">
					<div className="row">
						<div className="col-lg-8 entries">
							<article className="entry entry-single">
								<div className="entry-img">
									<Image
										src={`https:${url}`}
										width={
											featuredImage.fields.file.details
												.image.width
										}
										height={
											featuredImage.fields.file.details
												.image.height
										}
										alt=""
										className="img-fluid"
									/>
								</div>

								<h2 className="entry-title">{title}</h2>

								<div className="entry-meta">
									<ul>
										<li className="d-flex align-items-center">
											<i className="ri-user-heart-fill"></i>
											<a href="blog-single.html">ATC</a>
										</li>
										<li className="d-flex align-items-center">
											<i className="ri-time-line"></i>
											<a href="blog-single.html">
												<time dateTime="2020-01-01">
													Nov 10, 2020
												</time>
											</a>
										</li>
									</ul>
								</div>

								<div className="entry-content">
									{documentToReactComponents(
										blogContent,
										renderOptions
									)}
								</div>

								<div className="entry-footer clearfix">
									<div className="float-left">
										<ul className="cats">
											<li>
												<i className="ri-folder-open-fill"></i>
												<a href="#">Agritech</a>
											</li>
										</ul>

										<ul className="tags">
											<li>
												<i className="ri-price-tag-3-fill"></i>
												<a href="#">Soil Testing</a>
											</li>
											<li>
												<a href="#">Agriculture</a>
											</li>
											<li>
												<a href="#">Nepal</a>
											</li>
										</ul>
									</div>
								</div>
							</article>
						</div>
					</div>
				</div>
				{/* <div className="container">
					{posts.map((p) => (
						<Post key={p.date} date={p.date} image={p.image.fields} title={p.title} />
					))}
				</div> */}
			</section>
		</>
	);
};

BlogPost.displayName = 'BlogPost';

export default BlogPost;
